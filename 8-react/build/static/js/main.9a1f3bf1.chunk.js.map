{"version":3,"sources":["components/AddNewTask.tsx","components/Title.tsx","components/EditableLabel.tsx","components/TaskLine.tsx","components/TasksList.tsx","data-access/server-api.ts","components/App.tsx","index.tsx"],"names":["AddNewTask","props","useState","text","setText","classes","useStyles","addTaskIfNotEmpty","addTask","className","container","taskInput","autoFocus","value","onChange","e","target","onKeyDown","key","addButton","onClick","createUseStyles","display","marginBottom","flexGrow","maxWidth","borderRadius","paddingLeft","color","alignSelf","marginRight","marginLeft","border","backgroundColor","height","Title","tasksArray","Object","values","tasks","numOfTasks","length","header","filter","task","isDone","EditableLabel","isEditing","setEditing","children","doneEditing","saveText","label","onBlur","onKeyPress","alert","onFocus","currentTarget","select","fontSize","TaskLine","setTask","handleTaskChange","taskToUpdate","id","updateTask","checkbox","type","checked","newText","button","deleteTask","width","marginTop","borderBottomStyle","borderBottomColor","borderBottomWidth","TasksList","rows","map","getAllTasksFromServer","a","axios","get","response","data","deleteTaskFromServer","taskId","delete","addTaskToServer","post","updateTaskOnServer","App","setTasks","taskText","newTask","taskToAdd","newTasks","updatedTask","taskToDelete","res","useEffect","tasksFromServer","app","minHeight","padding","fontFamily","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a1f3bf1.chunk.js","sourcesContent":["import React, { ChangeEvent, useState } from 'react';\nimport {createUseStyles} from 'react-jss'\n\nexport default function AddNewTask(props: any) {\n    const [text, setText] = useState<string>('');\n    const classes: Record<string, string> = useStyles();\n\n    function addTaskIfNotEmpty(): void {\n        if (text != '') {\n            props.addTask(text);\n            setText('');\n        }\n    }\n\n    return (\n        <div className={classes.container}>\n            <input className={classes.taskInput}\n                autoFocus \n                value={text} \n                onChange={(e: ChangeEvent<HTMLInputElement>) => setText(e.target.value)}\n                onKeyDown={(e: React.KeyboardEvent<HTMLDivElement>) => \n                    (e.key === \"Enter\" && addTaskIfNotEmpty())} \n            />\n            <button className={classes.addButton} onClick={addTaskIfNotEmpty}>\n                Add Task\n            </button>\n        </div>\n    );  \n}\n\nconst useStyles = createUseStyles({\n    container: {\n        display: \"flex\",\n        marginBottom: \"20px\",\n    },\n    taskInput: {\n        flexGrow: 1,\n        maxWidth: \"400px\",\n        borderRadius: \"5px\",\n        paddingLeft: \"5px\",\n    },\n    addButton: {\n        color: \"white\",\n        alignSelf: \"flex-end\",\n        marginRight: \"5px\",\n        marginLeft: \"auto\",\n        border: \"none\",\n        backgroundColor: \"black\",\n        borderRadius: \"5px\",\n        height: 24,\n    },\n})","import { Task, TasksById } from '../../../common/Tasks';\nimport React from 'react';\nimport {createUseStyles} from 'react-jss';\n\nexport default function Title(props: any) {\n    const classes: Record<string, string> = useStyles();\n    const tasksArray: Task[] = Object.values(props.tasks);\n    const numOfTasks: number = tasksArray.length;\n\n    return (\n        <div>\n            <h1 className={classes.header}>\n                {\n                    (numOfTasks > 0) ?\n                    tasksArray.filter(task => task.isDone).length + \n                    \"/\" + numOfTasks + \" tasks\" :\n                    \"Create your first task!\"\n                }\n            </h1> \n        </div>\n    );\n}\n\nconst useStyles = createUseStyles({\n    header: {\n      color: 'red'\n    }\n});\n  ","import React, { ChangeEvent, useState } from 'react';\nimport {createUseStyles} from 'react-jss'\n\nexport default function EditableLabel (props: any) {\n  const [isEditing, setEditing] = useState<boolean>(false);\n  const [text, setText] = useState<string>(props.children);\n  const classes = useStyles();\n\n  function doneEditing() {\n    setEditing(false);\n    props.saveText(text);\n  }\n  \n  return (\n    <span className={classes.label}>\n      {isEditing ? (\n        <input className={classes.label}\n          value={text}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => setText(e.target.value)}\n          onBlur={doneEditing}\n          onKeyPress={()=>alert}\n          onKeyDown={(e: React.KeyboardEvent<HTMLInputElement>) => \n            (e.key === \"Enter\") && doneEditing()}\n          autoFocus\n          onFocus={(e: React.FocusEvent<HTMLInputElement>) => e.currentTarget.select()}\n        />\n      ) : (\n        <label\n          className={classes.label}\n          onClick={() => setEditing(true)}>\n          {text}\n        </label>\n      )}\n    </span>\n  );\n};\n\nconst useStyles = createUseStyles({\n  label: {\n      display: \"flex\",\n      flexGrow: 1,\n      fontSize: \"20px\",\n}});","import React, { ChangeEvent, useState } from 'react';\nimport { Task } from '../../../common/Tasks';\nimport EditableLabel from './EditableLabel';\nimport {createUseStyles} from 'react-jss'\n\nexport default function TaskLine(props: any) {\n    const [task, setTask] = useState<Task>(props.task);\n    const classes: Record<string, string> = useStyles();\n    \n    function handleTaskChange({isDone=task.isDone, text=task.text}) {\n        const taskToUpdate = {\n            isDone: isDone,\n            text: text,\n            id: task.id\n        };\n\n        setTask(taskToUpdate);\n        props.updateTask(taskToUpdate);\n    }\n\n    return (\n        <div className={classes.task}>\n            <input \n                className={classes.checkbox}\n                type=\"checkbox\" \n                checked={task.isDone}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => \n                    handleTaskChange({isDone: e.target.checked})}\n            />\n\n            <EditableLabel \n                saveText={(newText: string) => handleTaskChange({text: newText})}>\n                {task.text}\n            </EditableLabel>\n\n            <button \n                className={classes.button} \n                onClick={() => props.deleteTask(task)}> \n                Delete\n            </button>\n        </div>\n    );\n}\n\nconst useStyles = createUseStyles({\n    checkbox: {\n        height: \"18px\",\n        width: \"18px\",\n    },\n    button: {\n        backgroundColor: \"white\",\n        color: \"red\",\n        border: \"none\",\n    },\n    task: {\n        display: \"flex\",\n        marginTop: \"8px\",\n        borderBottomStyle: 'solid',\n        borderBottomColor: '#3d3d3d',\n        borderBottomWidth: '1px',\n    }\n});\n","import React from 'react';\nimport { Task } from '../../../common/Tasks';\nimport TaskLine from './TaskLine';\n\nexport default function TasksList(props: any) {\n    const tasksArray: Task[] = Object.values(props.tasks);\n    \n    const rows: JSX.Element[] = tasksArray.map((task: Task) => {\n        return (\n            <div key={task.id}>\n                <TaskLine \n                    task={task} \n                    updateTask={props.updateTask} \n                    deleteTask={props.deleteTask}\n                />\n            </div>\n        );\n    });\n\n    return (\n        <div>\n            {rows}\n        </div>\n    );\n}","import axios, { AxiosResponse } from 'axios';\nimport { Task, NewTask, TasksById, GUID } from '../../../common/Tasks';\n\nexport const getAllTasksFromServer = async(): Promise<TasksById> => {\n    const response: AxiosResponse = await axios.get('/api/v1/tasks');\n    return response.data;\n}\n\nexport const deleteTaskFromServer = (taskId: GUID): Promise<void> => {\n     return axios.delete('/api/v1/tasks/' + taskId);\n}\n\nexport const addTaskToServer = async(task: NewTask): Promise<Task> => {\n    const response: AxiosResponse = await axios.post('/api/v1/tasks', task);\n    return response.data;\n}\n\nexport const updateTaskOnServer = async (task: Task): Promise<void> => {\n    await axios.post('/api/v1/tasks', task);\n}","import React, { useEffect, useState } from 'react';\nimport AddNewTask from './AddNewTask';\nimport { NewTask, Task, TasksById } from '../../../common/Tasks';\nimport Title from './Title';\nimport TasksList from './TasksList';\nimport {getAllTasksFromServer, deleteTaskFromServer, addTaskToServer, updateTaskOnServer}\n  from '../data-access/server-api';\nimport {createUseStyles} from 'react-jss';\n\nexport default function App() {\n  const [tasks, setTasks] = useState<TasksById>({});\n  const classes: Record<string, string> = useStyles();  \n\n  useEffect((): void => {\n    (async (): Promise<void> => {\n      try {\n        const tasksFromServer: TasksById = await getAllTasksFromServer();\n        setTasks(tasksFromServer);\n      } catch (error) {\n        alert(\"cannot get your tasks\");\n      }\n    })()\n  }, []);\n\n  async function addTask(taskText: string): Promise<void> {\n    try {\n      const newTask: NewTask = {text: taskText, isDone: false};\n      const taskToAdd: Task = await addTaskToServer(newTask);\n      const newTasks: TasksById = {...tasks, [taskToAdd.id]: taskToAdd};\n      setTasks(newTasks);\n    } catch (error) {\n      alert(\"we cannot add your task!\");\n    }\n  }\n\n  async function updateTask(updatedTask: Task): Promise<void> {\n    try {\n      await updateTaskOnServer(updatedTask);\n      const newTasks: TasksById = {...tasks};\n      newTasks[updatedTask.id] = updatedTask;\n      setTasks(newTasks);\n    } catch (error) {\n      alert(\"cannot update task\");\n    }\n  }\n\n  async function deleteTask (taskToDelete: Task): Promise<void> {\n    try {\n      await deleteTaskFromServer(taskToDelete.id);\n      const {[taskToDelete.id]: task, ...res } = tasks;\n      setTasks(res);\n    } catch (error) {\n      alert(\"we cannot delete your task\");\n    }\n  }\n\n  return (\n    <div className={classes.app}>\n      <Title tasks={tasks} />\n      <AddNewTask addTask={addTask} />\n      <TasksList \n        tasks={tasks} \n        updateTask={updateTask}\n        deleteTask={deleteTask}\n      />\n    </div>\n  );\n}\n\nconst useStyles = createUseStyles({\n  app: {\n    maxWidth: \"600px\",\n    minHeight: \"400px\",\n    padding: \"10px\",            \n    fontFamily: \"Helvetica\",\n}});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}