[{"/Users/harelh/Documents/todo/8-react/src/index.tsx":"1","/Users/harelh/Documents/todo/8-react/src/reportWebVitals.ts":"2","/Users/harelh/Documents/todo/8-react/src/data-access/server-api.ts":"3","/Users/harelh/Documents/todo/8-react/src/components/Title.tsx":"4","/Users/harelh/Documents/todo/8-react/src/components/TasksList.tsx":"5","/Users/harelh/Documents/todo/8-react/src/components/AddNewTask.tsx":"6","/Users/harelh/Documents/todo/8-react/src/components/App.tsx":"7","/Users/harelh/Documents/todo/8-react/src/components/TaskLine.tsx":"8","/Users/harelh/Documents/todo/8-react/src/components/EditableLabel.tsx":"9"},{"size":489,"mtime":1606899038969,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1606833271794,"results":"12","hashOfConfig":"11"},{"size":712,"mtime":1606897940146,"results":"13","hashOfConfig":"11"},{"size":474,"mtime":1606912864382,"results":"14","hashOfConfig":"11"},{"size":637,"mtime":1606916631576,"results":"15","hashOfConfig":"11"},{"size":918,"mtime":1606919886064,"results":"16","hashOfConfig":"11"},{"size":1632,"mtime":1606920307668,"results":"17","hashOfConfig":"11"},{"size":1185,"mtime":1606918871518,"results":"18","hashOfConfig":"11"},{"size":945,"mtime":1606919205614,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1aigg68",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/harelh/Documents/todo/8-react/src/index.tsx",[],["42","43"],"/Users/harelh/Documents/todo/8-react/src/reportWebVitals.ts",[],"/Users/harelh/Documents/todo/8-react/src/data-access/server-api.ts",[],"/Users/harelh/Documents/todo/8-react/src/components/Title.tsx",[],"/Users/harelh/Documents/todo/8-react/src/components/TasksList.tsx",[],"/Users/harelh/Documents/todo/8-react/src/components/AddNewTask.tsx",["44","45"],"import React, { ChangeEvent, useState } from 'react';\n\nexport default function AddNewTask(props: any) {\n    const [text, setText] = useState('')\n\n    function handleTextChange(e: ChangeEvent<HTMLInputElement>){\n        setText(e.target.value);\n    }\n\n    function handleAddTaskClick(e: React.MouseEvent<HTMLButtonElement>) {\n        if (text != '') {\n            props.addTask(text);\n            setText('');\n        }\n    }\n\n    const handleKeyDown = (e: React.KeyboardEvent<HTMLDivElement>) => {\n        if (e.key === \"Enter\" && text != '') {\n            props.addTask(text);\n            setText('');\n        }\n    };\n\n    return (\n        <div>\n            <input \n                autoFocus \n                value={text} \n                onChange={handleTextChange} \n                onKeyDown={handleKeyDown} \n            />\n            <button onClick={handleAddTaskClick}>Add Task</button>\n        </div>\n    );\n}","/Users/harelh/Documents/todo/8-react/src/components/App.tsx",["46"],"import React, { useEffect, useState } from 'react';\nimport AddNewTask from './AddNewTask';\nimport { Task, NewTask, TasksById } from '../../../common/Tasks';\nimport Title from './Title';\nimport TasksList from './TasksList';\nimport { getAllTasksFromServer, deleteTaskFromServer, addTaskToServer, updateTaskOnServer } from '../data-access/server-api';\n\n\nfunction App() {\n  const [tasks, setTasks] = useState<TasksById>({});\n  \n  useEffect(() => {\n    (async function getTasks() {\n      try {\n        setTasks(await getAllTasksFromServer());\n      } catch (error) {\n        alert(\"cannot get your tasks\");\n      }\n    })();    \n  }, []);\n\n  async function addTask(taskText: string){\n    try {\n      const taskToAdd: Task = await addTaskToServer({text: taskText, isDone: false});\n      const newTasks = {...tasks};\n      newTasks[taskToAdd.id] = taskToAdd;\n      setTasks(newTasks);\n    } catch (error) {\n      alert(\"we cannot add your task!\");\n    }\n  }\n\n  async function updateTask(task: Task) {\n    try {\n      await updateTaskOnServer(task);\n    } catch (error) {\n      alert(\"cannot update task\");\n    }\n  }\n\n  async function deleteTask (taskToDelete: Task) {\n    try {\n      await deleteTaskFromServer(taskToDelete.id);\n      let {[taskToDelete.id]: task, ...res } = tasks;\n      setTasks(res);\n    } catch (error) {\n      alert(\"we cannot delete your task\");\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Title tasks={tasks} />\n      <AddNewTask addTask={addTask} />\n      <TasksList \n        tasks={tasks} \n        updateTask={updateTask}\n        deleteTask={deleteTask}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/harelh/Documents/todo/8-react/src/components/TaskLine.tsx",["47"],"import React, { ChangeEvent, useState } from 'react';\nimport { Task, NewTask } from '../../../common/Tasks';\nimport EditableLabel from './EditableLabel';\n\nexport default function TaskLine(props: any) {\n    const [task, setTask] = useState<Task>(props.task);\n\n    function handleCheckboxChange(e: ChangeEvent<HTMLInputElement>) {\n        const taskToUpdate = {\n            isDone: e.target.checked,\n            text: task.text,\n            id: task.id\n        };\n\n        setTask(taskToUpdate);\n        props.updateTask(taskToUpdate);\n    }\n    \n    function handleTextChange(text: string) {\n        const taskToUpdate = {\n            isDone: task.isDone,\n            text: text,\n            id: task.id\n        };\n\n        setTask(taskToUpdate);\n        props.updateTask(taskToUpdate);\n    }\n\n    return (\n        <div>\n            <input \n                type=\"checkbox\" \n                checked={task.isDone}\n                onChange={handleCheckboxChange}\n            />\n            <EditableLabel saveText={handleTextChange}>\n                {task.text}\n            </EditableLabel>\n            <button onClick={() => props.deleteTask(task)}>Delete</button>\n        </div>\n    );\n}","/Users/harelh/Documents/todo/8-react/src/components/EditableLabel.tsx",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":11,"column":18,"nodeType":"54","messageId":"55","endLine":11,"endColumn":20},{"ruleId":"52","severity":1,"message":"53","line":18,"column":39,"nodeType":"54","messageId":"55","endLine":18,"endColumn":41},{"ruleId":"56","severity":1,"message":"57","line":3,"column":16,"nodeType":"58","messageId":"59","endLine":3,"endColumn":23},{"ruleId":"56","severity":1,"message":"57","line":2,"column":16,"nodeType":"58","messageId":"59","endLine":2,"endColumn":23},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'NewTask' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]