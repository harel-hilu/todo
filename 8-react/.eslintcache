[{"/Users/harelh/Documents/todo/8-react/src/index.tsx":"1","/Users/harelh/Documents/todo/8-react/src/components/App.tsx":"2","/Users/harelh/Documents/todo/8-react/src/data-access/server-api.ts":"3","/Users/harelh/Documents/todo/8-react/src/components/AddNewTask.tsx":"4","/Users/harelh/Documents/todo/8-react/src/components/TasksList.tsx":"5","/Users/harelh/Documents/todo/8-react/src/components/Title.tsx":"6","/Users/harelh/Documents/todo/8-react/src/components/TaskLine.tsx":"7","/Users/harelh/Documents/todo/8-react/src/components/EditableLabel.tsx":"8","/Users/harelh/Documents/todo/8-react/src/effects/useStorage.tsx":"9"},{"size":207,"mtime":1606994617790,"results":"10","hashOfConfig":"11"},{"size":2840,"mtime":1607521589677,"results":"12","hashOfConfig":"11"},{"size":712,"mtime":1606994617728,"results":"13","hashOfConfig":"11"},{"size":1528,"mtime":1607418208904,"results":"14","hashOfConfig":"11"},{"size":676,"mtime":1607521265214,"results":"15","hashOfConfig":"11"},{"size":1101,"mtime":1607426420724,"results":"16","hashOfConfig":"11"},{"size":1902,"mtime":1607521117363,"results":"17","hashOfConfig":"11"},{"size":1321,"mtime":1607419743374,"results":"18","hashOfConfig":"11"},{"size":557,"mtime":1607426381330,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1vowmku",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/Users/harelh/Documents/todo/8-react/src/index.tsx",[],["43","44"],"/Users/harelh/Documents/todo/8-react/src/components/App.tsx",["45"],"import React, { useEffect, useState } from 'react';\nimport AddNewTask from './AddNewTask';\nimport { NewTask, Task, TasksById } from '../../../common/Tasks';\nimport Title from './Title';\nimport TasksList from './TasksList';\nimport {createUseStyles} from 'react-jss';\nimport {getAllTasksFromServer, deleteTaskFromServer, addTaskToServer, updateTaskOnServer} from '../data-access/server-api';\nimport {useStorage} from '../effects/useStorage';\n\nexport default function App() {\n  const [tasks, setTasks] = useState<TasksById>({});\n  const [isShowCompleted, setShowCompleted] = \n    useStorage<boolean>(\"todo_shouldShowCompleted\", true);\n  const classes: Record<string, string> = useStyles();    \n  \n  useEffect((): void => {\n    (async (): Promise<void> => {\n      try {\n        const tasksFromServer: TasksById = await getAllTasksFromServer();\n        setTasks(tasksFromServer);\n      } catch (error) {\n        alert(\"cannot get your tasks\");\n      }\n    })()\n  }, []);\n\n  const addTask = async (taskText: string): Promise<void> => {\n    try {\n      const newTask: NewTask = {text: taskText, isDone: false};\n      const taskToAdd = await addTaskToServer(newTask);\n      const newTasks: TasksById = {...tasks, [taskToAdd.id]: taskToAdd};\n      setTasks(newTasks);\n    } catch (error) {\n      alert(\"we cannot add your task!\");\n    }\n  }\n\n  const updateTask = async({id, text, isDone}: Task): Promise<void> => {\n    try {\n      await updateTaskOnServer({id, text, isDone});\n      // const newTasks = {...tasks};\n      tasks[id] = {id, text, isDone};\n      setTasks(tasks);\n    } catch (error) {\n      alert(\"cannot update task\");\n    }\n  }\n\n  const deleteTask = async (taskToDelete: Task): Promise<void> => {\n    try {\n      await deleteTaskFromServer(taskToDelete.id);\n      const {[taskToDelete.id]: task, ...res } = tasks;\n      setTasks(res);\n    } catch (error) {\n      alert(\"we cannot delete your task\");\n    }\n  }\n\n  const filteredTasks = () => tasks;\n  // Object.values(tasks).filter((task: Task) => isShowCompleted || !task.isDone);\n\n  return (\n    <div className={classes.app}>\n      <Title tasks={tasks} showCompleted={isShowCompleted} />\n      <AddNewTask addTask={addTask}  />\n      <button \n        onClick={() => setShowCompleted(!isShowCompleted)}\n        className={classes.button}>\n        {isShowCompleted ? \"Hide completed\" : \"Show completed\"}\n      </button>\n      <TasksList \n        tasks={Object.values(tasks)} \n        updateTask={updateTask}\n        deleteTask={deleteTask}\n      />\n    </div>\n  );\n}\n\nconst useStyles = createUseStyles({\n  app: {\n    maxWidth: \"600px\",\n    minHeight: \"400px\",\n    padding: \"10px\",            \n    fontFamily: \"Helvetica\",\n  },\n  button: {\n    backgroundColor: \"white\",\n    textColor: \"black\",\n    marginBottom: \"10px\",\n    marginRight: 0,\n    marginLeft: 0,\n    border: \"none\"\n  }\n});\n","/Users/harelh/Documents/todo/8-react/src/data-access/server-api.ts",[],"/Users/harelh/Documents/todo/8-react/src/components/AddNewTask.tsx",[],"/Users/harelh/Documents/todo/8-react/src/components/TasksList.tsx",[],"/Users/harelh/Documents/todo/8-react/src/components/Title.tsx",[],"/Users/harelh/Documents/todo/8-react/src/components/TaskLine.tsx",["46"],"import React, { ChangeEvent, useEffect, useState } from 'react';\nimport EditableLabel from './EditableLabel';\nimport {createUseStyles} from 'react-jss';\nimport PropTypes from 'prop-types';\n\nexport default function TaskLine({ task, updateTask, deleteTask }: any) {\n    const [isEditing, setEditing] = useState<boolean>(false);\n    const classes: Record<string, string> = useStyles();\n\n    return (\n        <div className={classes.task}>\n            <input \n                className={classes.checkbox}\n                type=\"checkbox\" \n                checked={task.isDone}\n                onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    updateTask({isDone: e.target.checked, id: task.id, text: task.text})}\n            />\n            \n            <EditableLabel \n                isEditing={isEditing}\n                setEditing={setEditing}\n                initialText={task.text} \n                saveText={(textToUpdate) => \n                    updateTask({text: textToUpdate, isDone: task.isDone, id: task.id})}\n            />\n \n            <button \n                className={classes.button} \n                onClick={() => setEditing(true)}> \n                Edit\n            </button>\n\n            <button \n                className={classes.button} \n                onClick={() => deleteTask(task)}> \n                Delete\n            </button>\n        </div>\n    );\n}\n\nTaskLine.propTypes = {\n    task: PropTypes.object,\n    updateTask: PropTypes.func,\n    deleteTask: PropTypes.func\n}\n\nconst useStyles = createUseStyles({\n    checkbox: {\n        height: \"18px\",\n        width: \"18px\",\n    },\n    button: {\n        backgroundColor: \"white\",\n        color: \"red\",\n        border: \"none\",\n    },\n    task: {\n        display: \"flex\",\n        marginTop: \"8px\",\n        borderBottomStyle: 'solid',\n        borderBottomColor: '#3d3d3d',\n        borderBottomWidth: '1px',\n    }\n});\n","/Users/harelh/Documents/todo/8-react/src/components/EditableLabel.tsx",[],["47","48"],"/Users/harelh/Documents/todo/8-react/src/effects/useStorage.tsx",["49","50","51"],"import React, {useEffect, useState} from 'react';\n\nexport function useStorage<T>(key: string, defaultValue: T) {\n    const [storageValue, setStorageValue] = useState<T>();\n\n    useEffect(() => {\n        const unparsedStorageValue = localStorage.getItem(key);\n        setStorageValue(unparsedStorageValue === null ? \n            defaultValue : JSON.parse(unparsedStorageValue));\n    }, []);\n\n    useEffect(() => {\n        localStorage.setItem(key, JSON.stringify(storageValue));\n    }, [storageValue]);\n\n    return [storageValue, setStorageValue] as const;\n}",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":59,"column":9,"nodeType":"58","messageId":"59","endLine":59,"endColumn":22},{"ruleId":"56","severity":1,"message":"60","line":1,"column":30,"nodeType":"58","messageId":"59","endLine":1,"endColumn":39},{"ruleId":"52","replacedBy":"61"},{"ruleId":"54","replacedBy":"62"},{"ruleId":"56","severity":1,"message":"63","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":13},{"ruleId":"64","severity":1,"message":"65","line":10,"column":8,"nodeType":"66","endLine":10,"endColumn":10,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":14,"column":8,"nodeType":"66","endLine":14,"endColumn":22,"suggestions":"69"},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"@typescript-eslint/no-unused-vars","'filteredTasks' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["70"],["71"],"'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'defaultValue' and 'key'. Either include them or remove the dependency array. If 'setStorageValue' needs the current value of 'defaultValue', you can also switch to useReducer instead of useState and read 'defaultValue' in the reducer.","ArrayExpression",["72"],"React Hook useEffect has a missing dependency: 'key'. Either include it or remove the dependency array.",["73"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},{"desc":"76","fix":"77"},"Update the dependencies array to be: [defaultValue, key]",{"range":"78","text":"79"},"Update the dependencies array to be: [key, storageValue]",{"range":"80","text":"81"},[385,387],"[defaultValue, key]",[485,499],"[key, storageValue]"]