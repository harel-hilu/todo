{"version":3,"sources":["webpack://Server/webpack/bootstrap","webpack://Server/webpack/runtime/compat get default export","webpack://Server/webpack/runtime/define property getters","webpack://Server/webpack/runtime/hasOwnProperty shorthand","webpack://Server/external \"express\"","webpack://Server/external \"cookie-parser\"","webpack://Server/external \"redis\"","webpack://Server/external \"uuid\"","webpack://Server/./app.ts","webpack://Server/./services/auth.middleware.ts","webpack://Server/./dao/tasks.dao.ts"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","require","client","process","env","REDIS_URL","app","set","port","PORT","use","__dirname","req","res","next","userId","cookies","v4","cookie","render","title","tasks","Promise","rej","hgetall","err","redisResponse","parsedTasks","task","JSON","parse","parseResponse","getAllTasks","status","send","post","id","hset","stringify","createTask","body","delete","taskId","hdel","deleteTask","params","listen","console","log"],"mappings":"mBACA,IAAIA,EAAsB,CCA1B,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAMF,EAAgB,QACtB,IAAMA,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLR,EAAwB,CAACI,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3E,EAAwB,CAACM,EAAKC,IAASL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,ICAjF,MAAM,EAA+BI,QAAQ,W,aCA7C,MAAM,EAA+BA,QAAQ,iB,aCA7C,MAAM,EAA+BA,QAAQ,S,aCA7C,MAAM,EAA+BA,QAAQ,Q,0SCO7C,MAAMC,EAAS,iBAAmBC,QAAQC,IAAIC,WAExCC,EAAe,MACrBA,EAAIC,IAAI,QAAS,MACjB,MAAMC,EAAgBL,QAAQC,IAAIK,MAAQ,OAE1CH,EAAII,IAAI,WAAeC,UAAY,YACnCL,EAAII,IAAI,YACRJ,EAAII,IAAI,OACRJ,EAAII,KCdwB,CAACE,EAAsBC,EAAuBC,KAEtEF,EAAIG,OAASH,EAAII,QAAwB,WAEpCJ,EAAIG,SACLH,EAAIG,QAAS,IAAAE,MACbJ,EAAIK,OALyB,aAKAN,EAAIG,SAGrCD,ODOJR,EAAIX,IAAI,KAAK,CAACiB,EAAsBC,KAChCA,EAAIM,OAAO,YAAa,CAACC,MAAO,iBAGpCd,EAAIX,IAAI,iBAAkB,CAAOiB,EAAsBC,IAAyB,OAAD,6BAC3E,MAAMQ,OEpBiB,EAACnB,EAAQa,IACzB,IAAIO,SAAQ,CAACT,EAAIU,IAAQrB,EAAOsB,QAAQT,GAAQ,CAACU,EAAKC,IACzDD,EAAMF,EAAIE,GAAOZ,EAezB,SAAuBA,GACnB,MAAMc,EAA4B,GAClC,IAAK,MAAMC,KAAQf,EACfc,EAAYC,GAAQC,KAAKC,MAAMjB,EAAIe,IAGvC,OAAOD,EArBkBI,CAAcL,QFkBLM,CAAY9B,EAAQU,EAAIG,QAC1DF,EAAIoB,OAAO,KAAKC,KAAKb,QAGzBf,EAAI6B,KAAK,iBAAkB,CAAOvB,EAAsBC,IAA0B,OAAD,6BAC7E,MAAMe,OEpBgB,EAAC1B,EAAQa,EAAgBa,KAC/CA,EAAKQ,GAAKR,EAAKQ,KAAM,IAAAnB,MAEd,IAAIK,SAAQ,CAACT,EAAKU,IAAQrB,EAAOmC,KAAKtB,EAAQa,EAAKQ,GAAIP,KAAKS,UAAUV,IACzE,CAACH,EAAKC,IAAkBD,EAAMF,EAAIE,GAAOZ,EAAIe,QFgBxBW,CAAWrC,EAAQU,EAAIG,OAAQH,EAAI4B,MAC5D3B,EAAIoB,OAAO,KAAKC,KAAKN,QAGzBtB,EAAImC,OAAO,yBACP,CAAO7B,EAAsBC,IAA0B,OAAD,kCElBhC,EAACX,EAAQa,EAAgB2B,IACxC,IAAIpB,SAAQ,CAACT,EAAKU,IAAQrB,EAAOyC,KAAK5B,EAAQ2B,GACjD,CAACjB,EAAKC,IAAkBD,EAAMF,EAAIE,GAAOZ,QFkBvC+B,CAAW1C,EAAQU,EAAIG,OAAQH,EAAIiC,OAAOH,QAChD7B,EAAIoB,OAAO,KAAKC,YAGpB5B,EAAIwC,OAAOtC,GAAM,IAAMuC,QAAQC,IAAI,qBAAqBxC,Q","file":"server.bundle.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"express\");;","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"cookie-parser\");;","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"redis\");;","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"uuid\");;","import express, { Express } from 'express';\nimport cookieParser from 'cookie-parser';\nimport redis from 'redis';\nimport { validateUser } from \"./services/auth.middleware\";\nimport { deleteTask, createTask, getAllTasks } from \"./dao/tasks.dao\";\nimport { Task, TasksHashMap } from \"../../todo/6-Typescript/src/intefaces/Tasks\";\n\nconst client = redis.createClient(process.env.REDIS_URL);\n\nconst app: Express = express();\napp.set('views', './');\nconst port: string = (process.env.PORT || \"3000\");\n\napp.use(express.static(__dirname + \"/public\"));\napp.use(express.json());\napp.use(cookieParser());\napp.use(validateUser);\n\napp.get('/', (req: Express.Request, res: Express.Response): void => {\n    res.render(\"index.ejs\", {title: \"Todo List\"});\n});\n\napp.get('/api/v1/tasks',  async (req: Express.Request, res:Express.Response) =>  { \n    const tasks: TasksHashMap = await getAllTasks(client, req.userId);\n    res.status(200).send(tasks);\n});\n\napp.post('/api/v1/tasks',  async (req: Express.Request, res: Express.Response) => {\n    const task: Task = await createTask(client, req.userId, req.body);\n    res.status(200).send(task);\n});\n\napp.delete('/api/v1/tasks/:taskId', \n    async (req: Express.Request, res: Express.Response) => {\n\n    await deleteTask(client, req.userId, req.params.taskId);\n    res.status(200).send();    \n});\n\napp.listen(port, () => console.log(`listening on port ${port}`));","import { v4 } from \"uuid\";\n\nexport const validateUser = (req: Express.Request, res: Express.Response, next): void => {\n    const userIdCookieName: string = \"todoUserId\";\n    req.userId = req.cookies[userIdCookieName];\n    \n    if (!req.userId) {\n        req.userId = v4();\n        res.cookie(userIdCookieName, req.userId);\n    } \n\n    next();\n}","import { v4 } from 'uuid';\nimport { Task, TasksHashMap } from \"../../../todo/6-Typescript/src/intefaces/Tasks\";\n\nexport const getAllTasks = (client, userId: string): Promise<TasksHashMap> => {\n    return new Promise((res,rej) => client.hgetall(userId, (err, redisResponse) => \n        err ? rej(err) : res(parseResponse(redisResponse))));\n};\n\nexport const createTask = (client, userId: string, task: Task): Promise<Task> => {\n    task.id = task.id || v4();\n\n    return new Promise((res, rej) => client.hset(userId, task.id, JSON.stringify(task), \n        (err, redisResponse) => err ? rej(err) : res(task)));\n}\n\nexport const deleteTask = (client, userId: string, taskId: string) => {\n    return new Promise((res, rej) => client.hdel(userId, taskId,\n        (err, redisResponse) => err ? rej(err) : res()));\n}\n\nfunction parseResponse(res: [string, string]): TasksHashMap {\n    const parsedTasks: TasksHashMap = {};\n    for (const task in res) {\n        parsedTasks[task] = JSON.parse(res[task])\n    }\n\n    return parsedTasks;\n}"],"sourceRoot":""}